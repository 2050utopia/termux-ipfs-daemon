#!/data/data/com.termux/files/usr/bin/bash

# Install IPFS
if [ ! -f ~/ipfs ]; then
    echo "Downloading ipfs binary..."
    if [ "aarch64" = "$(uname -m)" ]; then
        BINARY="QmRMHb4Vhv8LtYqw8RkDgkdZYxJHfrfFeQaHbNUqJYmdF2"
    else
        BINARY="QmZp3wZU4MsU53P8isK5rVCcEdiSig2xdSzxJSEBgAw3Kg"
    fi

    curl https://ipfs.io/ipfs/$BINARY -# -o ~/ipfs
    chmod ogu+x ~/ipfs
fi

# Initialize IPFS if necessary
if [ ! -d ~/.ipfs ]; then
    ~/ipfs init
fi

# Install other prerequisites
if [ ! $(which jq) ]; then
    apt install jq
fi

if [ ! $(which termux-wifi-connectioninfo) ]; then
    apt install termux-api
fi

while :
do
    # Get wifi connection
    if [ ! "$(termux-wifi-connectioninfo | jq .link_speed_mbps)" == "-1" ]; then
        WIFI_LINK=1
    else
        WIFI_LINK=0
    fi

    # If any change in the connection
    if [ ! "$WIFI_LINK" == "$PREV_WIFI_LINK" ]; then
        # If there is any previous daemon, kill it
        if [ ! "$PREV_WIFI_LINK" == "" ]; then
            killall ipfs
            sleep 10
            echo -n "Network change detected: "
        fi
        # If not wifi, run offline
        if [ "$WIFI_LINK" == "0" ]; then
            echo "wifi unavailable, going offline."
            ~/ipfs daemon --offline &
        else
            echo "wifi available, going online."
            ~/ipfs daemon &
        fi
    fi

    PREV_WIFI_LINK="$WIFI_LINK"

    # Polling interval 15 sec
    sleep 15
done
